version: "3.9"

services:
    web:
        build:
            context: .
            dockerfile: docker/web.Dockerfile
            args:
                WEB_PORT: ${WEB_PORT}
        ports:
            - "${WEB_PORT}:${WEB_PORT}"
        environment:
            - WEB_PORT=${WEB_PORT}
            - API_PORT=${API_PORT}
            - APP_NAME=${APP_NAME}
        volumes:
            - .:/app
        depends_on:
            - server

    server:
        build:
            context: .
            dockerfile: docker/server.Dockerfile
            args:
                API_PORT: ${API_PORT}
        ports:
            - "${API_PORT}:${API_PORT}"
        environment:
            - API_PORT=${API_PORT}
            - APP_NAME=${APP_NAME}
            - DB_HOST=db
            - DB_PORT=${DB_PORT}
            - DB_USER=${DB_USER}
            - DB_PASSWORD=${DB_PASSWORD}
            - DB_NAME=${DB_NAME}
        volumes:
            - .:/app
        depends_on:
            - db

    db:
        image: mysql:8.0
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
            MYSQL_DATABASE: ${DB_NAME}
            MYSQL_USER: ${DB_USER}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        ports:
            - "${DB_PORT}:3306"
        volumes:
            - db_data:/var/lib/mysql

    db-admin:
        image: adminer:latest
        environment:
            ADMINER_DEFAULT_SERVER: db
        ports:
            - "${DB_ADMIN_PORT}:8080"
        depends_on:
            - db

volumes:
    db_data:
